{"ast":null,"code":"import { GET_POSTS, UPDATE_POST, GET_POST, ADD_POST, DELETE_POST, POSTS_LOADING } from '../actions/types';\nconst initialState = {\n  posts: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_POST:\n    case GET_POSTS:\n      return { ...state,\n        posts: action.payload,\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [action.payload, ...state.posts]\n      };\n\n    case POSTS_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/SAMSUNG/W2/PreviouslyOn/client/src/reducers/postReducer.js"],"names":["GET_POSTS","UPDATE_POST","GET_POST","ADD_POST","DELETE_POST","POSTS_LOADING","initialState","posts","loading","state","action","type","payload","filter","post","_id"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,EAA2CC,QAA3C,EAAqDC,WAArD,EAAkEC,aAAlE,QAAuF,kBAAvF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,QAAL;AACA,SAAKF,SAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFX;AAGHJ,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKJ,WAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA/C;AAFJ,OAAP;;AAIJ,SAAKT,QAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,KAAK,EAAE,CAACG,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,KAA1B;AAFJ,OAAP;;AAIJ,SAAKF,aAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHD,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ;AACI,aAAOC,KAAP;AAxBR;AA0BH","sourcesContent":["import { GET_POSTS, UPDATE_POST, GET_POST, ADD_POST, DELETE_POST, POSTS_LOADING } from '../actions/types'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    loading: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_POST:\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload,\r\n                loading: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== action.payload)\r\n            }\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [action.payload, ...state.posts]\r\n            }\r\n        case POSTS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}