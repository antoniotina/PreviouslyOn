{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/SAMSUNG/W2/PreviouslyOn/client/src/components/home/Home.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from \"react-html-parser\";\nimport ReactPaginate from \"react-paginate\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nexport default function Home() {\n  const [shows, setShows] = useState(null);\n  const [limit, setLimit] = useState(5);\n  const [offset, setOffset] = useState(0);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_API_LINK + '/shows/discover?key=' + process.env.REACT_APP_API_KEY + '&limit=' + limit + '&offset=' + offset).then(res => {\n      res.data.shows === [] ? move(-offset) : setShows(res.data.shows);\n      console.log(res.data.shows);\n    });\n  }, [page]);\n\n  function move(amount) {\n    setPage(page + amount);\n    setOffset(page * 5);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, shows.map(show => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: show.id,\n      className: \"row card p-2 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, show.original_title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"Seasons: \", show.seasons), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Episodes: \", show.episodes), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"Episode length: \", show.length, \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Score: \", show.notes.mean.toFixed(1)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Synopsis: \", show.description), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Genres:\", show.genres.map(genre => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, genre);\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), ReactHtmlParser(event.description), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: location => `/e/${event.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"btn btn-primary text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }, \"Go to Event page\"))));\n  }))), page !== 1 ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary m-2\",\n    onClick: () => move(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Back\") : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary m-2\",\n    onClick: () => move(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Forward\"));\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/SAMSUNG/W2/PreviouslyOn/client/src/components/home/Home.js"],"names":["React","useEffect","useState","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","ReactPaginate","axios","Link","Home","shows","setShows","limit","setLimit","offset","setOffset","page","setPage","totalPages","setTotalPages","get","process","env","REACT_APP_API_LINK","REACT_APP_API_KEY","then","res","data","move","console","log","amount","map","show","id","original_title","seasons","episodes","length","notes","mean","toFixed","description","genres","genre","event","location"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser, {\n  processNodes,\n  convertNodeToElement,\n  htmlparser2,\n} from \"react-html-parser\";\nimport ReactPaginate from \"react-paginate\";\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  const [shows, setShows] = useState(null);\n  const [limit, setLimit] = useState(5);\n  const [offset, setOffset] = useState(0);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_API_LINK + '/shows/discover?key=' + process.env.REACT_APP_API_KEY + '&limit=' + limit + '&offset=' + offset)\n      .then(res => {\n        res.data.shows === [] ?\n          move(-offset) :\n          setShows(res.data.shows)\n        console.log(res.data.shows)\n      })\n  }, [page])\n\n  function move(amount) {\n    setPage(page + amount)\n    setOffset(page * 5)\n  }\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"card\">\n          {\n            shows.map((show) => {\n              return (\n                <div key={show.id} className=\"row card p-2 m-1\">\n                  <li>\n                    <h3>\n                      {show.original_title}\n                    </h3>\n                    <p>\n                      Seasons: {show.seasons}\n                    </p>\n                    <p>\n                      Episodes: {show.episodes}\n                    </p>\n                    <p>\n                      Episode length: {show.length} minutes\n                  </p>\n                    <p>\n                      Score: {show.notes.mean.toFixed(1)}\n                    </p>\n                    <p>\n                      Synopsis: {show.description}\n                    </p>\n                    <p>\n                      Genres:\n                        {show.genres.map((genre) => {\n                      return (\n                        <span>{genre}</span>\n                      )\n                    })}\n                    </p>\n                    <br />\n                    {ReactHtmlParser(event.description)}\n                    <br />\n                    <Link to={location => `/e/${event.id}`}>\n                      <span className=\"btn btn-primary text-light\">Go to Event page</span>\n                    </Link>\n                  </li>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n      {page !== 1 ? <button className=\"btn btn-primary m-2\" onClick={() => move(-1)}>Back</button> : null}\n      <button className=\"btn btn-primary m-2\" onClick={() => move(1)}>Forward</button>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}